#//////////////////////////////////////////////////////////////////////
#!/bin/bash
#//////////////////////////////////////////////////////////////////////
#----------------------------------------------------------------------
#
# inpath — Verifies that a spaecified program is either valid as is
#          or can be found in the PATH directory list
#
#----------------------------------------------------------------------
#//////////////////////////////////////////////////////////////////////
# PATH AND NAME FOR FRIENDLY USE
#//////////////////////////////////////////////////////////////////////
#----------------------------------------------------------------------
_path=$0
_name="${_path##*/}"
#----------------------------------------------------------------------
#//////////////////////////////////////////////////////////////////////
# FUNCTIONS
#//////////////////////////////////////////////////////////////////////
#----------------------------------------------------------------------
in_path() {

  # Given a command and the PATH, this function looks for the command.
  # Returns 0 if found and executable; 1 if not. Note that this tempo-
  # rarily modifies the IFS (internal field separator) but restores it
  # upon completion.

  cmd=$1
  ourpath=$2
  result=1
  oldIFS=$IFS # save original IFS to restore it at end of function
  IFS=":"

  for directory in $ourpath
  do
    if [ -x $directory/$cmd ] ; then
      result=0
    fi
  done
  
  IFS=$oldIFS
  return $result

}
#----------------------------------------------------------------------
checkForCmdInPath(){

  var=$1
  
  if [ "$var" != "" ] ; then
    if [ "${var:0:1}" = "/" ] ; then
      if [ ! -x $var ] ; then
        return 1
      fi
    elif ! in_path $var "$PATH" ; then
      return 2
    fi
  fi
}
#----------------------------------------------------------------------
#//////////////////////////////////////////////////////////////////////
# INTERNAL AFFAIRS
#//////////////////////////////////////////////////////////////////////
#----------------------------------------------------------------------

if [ $BASH_SOURCE = "$_path" ] ; then  # script called directly

  if [ $# -ne 1 ] ; then # incorrect usage
    echo "Usage: $0 command" >&2
    exit 1
  fi

  checkForCmdInPath "$1" # here's where we get rollin'

  # echo
  # echo we gon werk wit $?
  # echo


  case $? in # here we use what was output to standard error?
    0 ) echo "$? $1 found in PATH"			;; 
    1 ) echo "$? $1 not found or not exectuable"	;;
    2 ) echo "$? $1 not found in PATH"		;;
  esac

  exit 0

fi

#----------------------------------------------------------------------
#//////////////////////////////////////////////////////////////////////
# END OF inpath — 220210.0052
#//////////////////////////////////////////////////////////////////////
